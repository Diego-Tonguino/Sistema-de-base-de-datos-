Fragmentación Horizontal 

Definición: Consiste en dividir una tabla en subconjuntos de filas. Cada fragmento contiene
registros que cumplen con ciertos criterios (por ejemplo, ubicación geográfica, rango de fechas o segmentos de clientes). 

Ventajas: 

Reduce la cantidad de datos que cada nodo debe procesar. 

Mejora el rendimiento de las consultas al acceder solo a los datos relevantes para cada sitio. 

Facilita la paralelización de procesos y el mantenimiento de la base de datos. 

Fragmentación Vertical 

Definición: Divide una tabla en fragmentos basados en columnas. Cada fragmento agrupa atributos relacionados, 
siempre conservando la clave primaria o un identificador único que permita reconstruir la tabla original. 

Ventajas: 

Permite optimizar el acceso a datos cuando las aplicaciones requieren solo ciertos campos. 

Mejora la seguridad al separar información sensible en fragmentos diferentes. 

Facilita la gestión del ancho de banda, ya que se transfieren solo los datos necesarios. 

Fragmentación Mixta (o Híbrida) 

Definición: Combina la fragmentación horizontal y vertical. Inicialmente, se puede realizar una división horizontal
y, posteriormente, cada fragmento se subdivide verticalmente, o viceversa. 

Ventajas: 

Ofrece una mayor flexibilidad para adaptar la distribución de los datos a las necesidades específicas de las aplicaciones y usuarios. 

Permite aprovechar las ventajas de ambos métodos, optimizando tanto el rendimiento como la seguridad. 

2. Almacenamiento en Bases de Datos Distribuidas 

Una vez fragmentada la base de datos, el almacenamiento se planifica para maximizar la eficiencia y la disponibilidad: 

Asignación de Fragmentos a Nodos 

Cada fragmento se asigna a uno o varios nodos según criterios como la proximidad geográfica, la carga de trabajo y la capacidad de procesamiento. 

La ubicación de los fragmentos puede optimizar el tiempo de respuesta, ya que los datos se sitúan cerca de los usuarios que los consultan con mayor frecuencia. 

Replicación 

Además de la fragmentación, se suele implementar la replicación. Esto significa que se mantienen copias de ciertos fragmentos en varios nodos. 

La replicación aumenta la tolerancia a fallos, ya que, si un nodo falla, otro puede tomar el relevo sin interrumpir el servicio. 

Control de Consistencia y Sincronización 

Es fundamental implementar mecanismos de sincronización para mantener la coherencia de los datos entre 
nodos, especialmente cuando se realizan actualizaciones en fragmentos replicados. 

Se pueden utilizar protocolos de control de concurrencia y algoritmos de consenso para garantizar que 
las transacciones sean atómicas y consistentes en todo el sistema. 

3. Consideraciones en el Diseño 

Patrones de Acceso: La elección del método de fragmentación depende en gran medida de los patrones de 
acceso y consulta. Si la mayoría de las consultas son locales a un conjunto de datos, la fragmentación horizontal es muy adecuada. 

Carga y Escalabilidad: Una buena distribución de los fragmentos ayuda a equilibrar la carga entre nodos, 
permitiendo que el sistema escale eficientemente conforme aumenta el volumen de datos y usuarios. 

Seguridad y Privacidad: Al fragmentar y almacenar datos en diferentes ubicaciones, es posible implementar
políticas de seguridad diferenciadas, protegiendo mejor la información sensible. 

En resumen, la fragmentación de bases de datos a través de métodos horizontal, vertical y mixto permite distribuir
los datos de manera eficiente y optimizar tanto la consulta como el almacenamiento
en entornos distribuidos. Estas técnicas, combinadas con estrategias de replicación y mecanismos de
sincronización, constituyen la base para construir sistemas robustos, escalables y seguros en el contexto de bases de datos distribuidas. 
